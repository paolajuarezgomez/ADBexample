name: GitHub Actions Demo
on: [push]
#on:
#    push:
#        branches:
#            - master
jobs:
  Explore-GitHub-Actions:
    #runs-on: [self-hosted, pjuarez]
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.name }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
    
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo  "The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
          
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
  
      - run: echo "🖥️ running Terraform init."
      - name: Terraform  init
        uses: hashicorp/setup-terraform@v1
       
        env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}
            TF_ACTION_WORKING_DIR: 'terraform'
            TF_VAR_fingerprint:  ${{ secrets.API_FINGERPRINT }}
            TF_VAR_user_ocid:  ${{ secrets.USER_ID }}
            TF_VAR_region: ${{ secrets.REGION}}
            
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
         PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`
      
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
      
            </details>
      
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
        
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
