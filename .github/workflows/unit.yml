name: Terraform Unit Tests
#on: push
on:
  push:
    branches:
    - main
  pull_request:
  
jobs:
  go-tests:
    name: Run Terratest Unit Tests
    
    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
      TF_VAR_fingerprint:  ${{ secrets.API_FINGERPRINT }}
      TF_VAR_user_ocid:  ${{ secrets.USER_ID }}
      TF_VAR_region: ${{ secrets.REGION}}
      TF_ACTION_WORKSPACE: "default"
      AWS_ACCESS_KEY_ID: ${{ secrets.ACCES_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY}}
      
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: 1.13
 
      # Configure S3 backend
      - name: Configure S3 backend
        run: | 
         echo  "[default]" > cred_store
         echo "aws_access_key_id= ${{ secrets.access_key_id}}" >> cred_store
         echo "aws_secret_access_key= ${{ secrets.secret_access_key}}" >> cred_store
         cat cred_store
         echo ${{ secrets.secret_access_key}}
         echo ${{ secrets.REGION}}
     
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1.3.2
     
      - name: Download Go Modules
        working-directory: test
        run: go mod download
      
      - name: Run Go Tests
        id: test
        working-directory: test
        run: go test -v -tags=unit

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
         PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
         github-token: ${{ secrets.TOKEN }}
         script: |
          const output = `#### Terraform Format and Style ðŸ–Œ\`
          ${{ steps.test.outputs.stdout }}\``
